# -*- mode: ruby -*-
# vi: set ft=ruby :

# Vagrantfile API/syntax version. Don't touch unless you know what you're doing!
VAGRANTFILE_API_VERSION = "2"

Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|
  # All Vagrant configuration is done here. The most common configuration
  # options are documented and commented below. For a complete reference,
  # please see the online documentation at vagrantup.com.
  config.vm.box = "precise64"
  config.vm.define :es do |es_config|
    es_config.vm.host_name = "elastic"
    es_config.vm.network "forwarded_port", guest: 9200, host: 9200
    es_config.vm.network "private_network", ip: "192.168.100.10"
    # config.vm.synced_folder "../data", "/vagrant_data"

    es_config.vm.provision :chef_solo do |chef|
      chef.cookbooks_path = "../../chef-repo/cookbooks"
      chef.roles_path = "../../chef-repo/roles"
      chef.data_bags_path = "../../chef-repo/data_bags"
      #chef.add_recipe "apt"
      chef.add_recipe "java"
      chef.add_recipe "elasticsearch"
      chef.json = {
          "java" => {
              "install_flavor" => "openjdk",
              "jdk_version" => "7"
          },
          "elasticsearch" => {
              "cluster_name" => "elasticsearch_test_chef",
              "bootstrap.mlockall" => false
        }    
      }
    end
  end

  config.vm.define :mysql do |mysql_config|
    mysql_config.vm.host_name = "mysql"
    mysql_config.vm.network "forwarded_port", guest: 3306, host: 3306
    mysql_config.vm.network "private_network", ip: "192.168.100.11"
    mysql_config.vm.synced_folder "/Users/alex/Dev/Data/WhatPassport", "/vagrant_data"
    mysql_config.vm.provider "virtualbox" do |v|
      v.customize ["modifyvm", :id, "--memory", "2048"]
    end

    mysql_config.vm.provision :chef_solo do |chef|
      chef.cookbooks_path = "../../chef-repo/cookbooks"
      chef.roles_path = "../../chef-repo/roles"
      chef.data_bags_path = "../../chef-repo/data_bags"
      #chef.add_recipe "apt"
      chef.add_recipe "mysql::server"
      chef.add_recipe "mysql::client"
      chef.json = {
        "mysql" => {
          "server_root_password" => "password",
          "server_repl_password" => "password",
          "server_debian_password" => "password"
        }
      }
    end
  end

  config.vm.define :web do |web_config|
    web_config.vm.host_name = "web"
    web_config.vm.network "forwarded_port", guest: 80, host: 8080
    web_config.vm.network "private_network", ip: "192.168.100.12"
    web_config.vm.provider "virtualbox" do |v|
      v.customize ["modifyvm", :id, "--memory", "2048"]
    end

    web_config.vm.provision :chef_solo do |chef|
      chef.cookbooks_path = "../../chef-repo/cookbooks"
      chef.roles_path = "../../chef-repo/roles"
      chef.data_bags_path = "../../chef-repo/data_bags"
      chef.add_recipe "apache2"
      chef.add_recipe "apache2::default"
    end
  end
end
